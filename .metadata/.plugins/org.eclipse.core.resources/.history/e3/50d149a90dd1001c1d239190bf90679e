package customer;

import chef.Chef;
import waiter.Waiter;

public class Customer implements Runnable {
	
	Thread thread;
	String name;
	int tolerance;
	CustomerState state;
	
	Chef chef;
	
	public Chef getChef() {
		return chef;
	}

	public void setChef(Chef chef) {
		this.chef = chef;
	}

	public Waiter getWaiter() {
		return waiter;
	}

	public void setWaiter(Waiter waiter) {
		this.waiter = waiter;
	}

	Waiter waiter;
	
	
	public Customer(String name, int tolerance) {
		thread = new Thread(this, name);
		this.name = name;
		this.tolerance = tolerance;
		state = new State1Order(this);
		thread.start();
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public CustomerState getState() {
		return state;
	}

	public void setState(CustomerState state) {
		this.state = state;
	}

	public int  getTolerance() {
		return tolerance;
	}

	public void setTolerance(int  tolerance) {
		this.tolerance = tolerance;
	}

	@Override
	public void run() {
		
		state.activity();
		
		if(tolerance <= 0) {
			
		}
		if(thread.isAlive()) run();
	}
	
	private void Running() {
		System.out.println("wow");

	}

}
